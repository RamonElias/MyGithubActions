
gh run list --workflow=MyFirstWorkflow.yml

gh run list --workflow=create-failure-issue.yml

gh run view 1234567 --log
gh run view 16658688268 --log

LAST_RUN_ID=$(gh run list --workflow=MyFirstWorkflow.yml --limit 1 --json databaseId --jq '.[0].databaseId')
LAST_RUN_ID=$(gh run list --workflow=create-failure-issue.yml --limit 1 --json databaseId --jq '.[0].databaseId')
echo $LAST_RUN_ID
gh run view $LAST_RUN_ID --log

gh workflow run MyFirstWorkflow.yml -f homedrive=/home -f logLevel=warning -f tag=true -f environment=Staging

gh workflow run MyFirstWorkflow.yml -f homedrive=/home/ubuntu -f logLevel=debug -f tag=true -f environment=Staging

gh workflow run MyFirstWorkflow.yml -f homedrive=/home -f tag=true -f environment=Staging

gh workflow run create-failure-issue.yml -f title="failure issue #2" -f body="failure issue #2 body"

gh workflow run running-a-workflow-with-a-matrix.yml

issue_message='issue' ; dt=`date '+%d/%m/%Y_%H:%M:%S'` ; gh workflow run create-failure-issue.yml -f title="$issue_message $dt" -f body="$issue_message $dt body"

curl \
-X POST \
-H "Accept: application/vnd.github.v3+json" \
https://api.github.com/repos/{owner}/{repo}/dispatches \
-d '{"event_type":"event1"}'

curl \
-X POST \
-H "Accept: application/vnd.github.v3+json" \
https://api.github.com/repos/RamonElias/ActionsInAction/dispatches \
-d '{"event_type":"event1"}'

gh api -X POST -H "Accept: application/vnd.github.v3+json" \
/repos/{owner}/{repo}/dispatches \
-f event_type=event1 \
-f 'client_payload[passed]=false' \
-f 'client_payload[message]=Error: timeout'

gh api -X POST -H "Accept: application/vnd.github.v3+json" \
/repos/RamonElias/MyGithubActions/dispatches \
-f event_type=event1 \
-f 'client_payload[passed]=false' \
-f 'client_payload[message]=Error: timeout'

gh secret set secret-name
gh secret set secret-name < secret.txt

gh variable set var-name
gh variable set var-name --body config-value

gh secret set secret-name --env environment-name
gh secret set secret-name --org org -v private
gh secret set secret-name --org org -v selected -r repo

gh api \
  --method POST \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  /repos/RamonElias/MyGithubActions/actions/variables \
   -f 'name=FILE_TO_CHECK' -f 'value=baz'

gh api \
  --method POST \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  /repos/RamonElias/MyGithubActions/actions/variables \
   -f 'name=FILE_TO_CHECK' -f 'value=Dockerfile'

gh api \
  --method PATCH \
  -H "Accept: application/vnd.github+json" \
  -H "X-GitHub-Api-Version: 2022-11-28" \
  /repos/RamonElias/MyGithubActions/actions/variables/FILE_TO_CHECK \
   -f 'name=FILE_TO_CHECK' -f 'value=Dockerfile'
